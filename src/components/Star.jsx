/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: vodkaavocado (https://sketchfab.com/vodkaavocado)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/shining-star-low-poly-72e462e4946b4bbb9a6c18e876f04784
Title: Shining star low poly
*/

import React, { useContext, useEffect, useRef, useState } from 'react'
import { Float, useGLTF, useTexture } from '@react-three/drei'
import { a, useSpring } from '@react-spring/three';
import { SummaryContext } from '../sections/SummaryCarousel';

const Star = (props) => {

    const modelNameState = useContext(SummaryContext)

    console.log(modelNameState.modelName)

    const { nodes, materials } = useGLTF('models/shining_star_low_poly.glb')

    const [hovered, setHovered] = useState(0);

    const [localNameState, setLocalNameState] = useState({
        modelNameState
    })

    const pointerEnterHandler = (e) => {
        setHovered(1);
        
        setLocalNameState({
            ...localNameState,
            modelName: "Star"
        })

        modelNameState.modelName = "Star"
    }

    const pointerLeaveHandler = (e) => {
        setHovered(0);
        
        setLocalNameState({
            ...localNameState,
            modelName: ""
        })

        modelNameState.modelName = ""
    }

    const { scaleSpring } = useSpring({
        scaleSpring: hovered,
        config: {
            mass: 5, tension: 400, friction: 50, precision: 0.0001
        }
    })

    const scaler = scaleSpring.to([0, 1], [0.6, 1])

    return (
        
        <Float intensity={1}>
            <a.group {...props} dispose={null} scale={scaler} onPointerEnter={(e) => pointerEnterHandler(e)} onPointerLeave={(e) => pointerLeaveHandler(e)} onClick={() => window.location='/#testimonials'}>
                <group rotation={[-Math.PI, 0, 0]}>
                    <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_4.geometry}
                    material={materials.Material}
                    rotation={[Math.PI / 2, 0, Math.PI / 2]}
                    />
                </group>
            </a.group>
        </Float>
        
    )
}

useGLTF.preload('models/shining_star_low_poly.glb')

export default Star