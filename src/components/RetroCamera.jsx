/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Underprotection (https://sketchfab.com/Underprotection)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/polaroid-camera-6b81090320bc4aa09644105bbf610106
Title: Polaroid Camera
*/

import React, { useRef, useState } from 'react'
import { useGLTF, Float } from '@react-three/drei'
import { a, useSpring } from '@react-spring/three'

const RetroCamera = (props) => {
    const { nodes, materials } = useGLTF('models/retro_camera.glb')

    const [hovered, setHovered] = useState(0);

    const { scaleSpring } = useSpring({
        scaleSpring: hovered,
        config: {
            mass: 5, tension: 400, friction: 50, precision: 0.0001
        }
    })

    const scaler = scaleSpring.to([0, 1], [0.2, 0.3])

    return (
        <Float intensity={1}>
            <a.group {...props} dispose={null} scale={scaler} onPointerEnter={() => setHovered(1)} onPointerLeave={() => setHovered(0)} onClick={() => window.location='/#pastProjects'} >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Slice002_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-0.009, 0.554, 2.057]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cylinder002_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[0, 0.699, 2.981]}
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={[1.021, 1, 1]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube009_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[1.583, 3.384, 1.575]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cylinder003_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[0.093, 3.001, 1.707]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Sphere_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[0.096, 2.992, 1.739]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Sphere001_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.556, 3.268, 1.577]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube011_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.558, 3.269, 1.536]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube001_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[1.58, 3.345, -0.247]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Circle002_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.408, 3.553, 0.325]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Circle_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.859, 3.55, 0.319]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Circle001_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.901, 3.006, 0.318]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cylinder004_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[-1.547, 2.215, 1.578]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[0, 1.953, -0.418]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube007_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[0, 1.951, 1.914]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube010_PolaroidCamera_0.geometry}
                    material={materials.PolaroidCamera}
                    position={[1.583, 3.384, 1.515]}
                    rotation={[-Math.PI / 2, 0, 0]}
                />
                </a.group>
        </Float>
        
    )
}

useGLTF.preload('models/retro_camera.glb')

export default RetroCamera