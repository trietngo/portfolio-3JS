/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Brandon Westlake (https://sketchfab.com/dr.badass2142)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/retro-computer-setup-free-82eaf2047e0447a1bfea22482f1d1404
Title: Retro Computer Setup (FREE)
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'

export default function HackerRoom(props) {

    const { nodes, materials } = useGLTF('/models/hacker-room.glb');

    // Import textures
    const monitorTxt = useTexture('textures/desk/monitor.png');
    const screenTxt = useTexture('textures/desk/FINAL.png');

    return (
        <group {...props} dispose={null}>
            <mesh castShadow receiveShadow geometry={nodes.screen_screens_0.geometry} material={materials.screens}>
                {/* Add custome texture to mesh */}
                {/* <meshMatcapMaterial map={screenTxt} /> */}
            </mesh>
            <mesh castShadow receiveShadow geometry={nodes.screen_glass_glass_0.geometry} material={materials.glass} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_1.geometry} material={materials.table_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_2.geometry} material={materials.computer_mat}>
                {/* <meshMatcapMaterial map={monitorTxt} /> */}
            </mesh>
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_3.geometry} material={materials.server_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_4.geometry} material={materials.vhsPlayer_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_5.geometry} material={materials.stand_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_6.geometry} material={materials.mat_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_7.geometry} material={materials.arm_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_8.geometry} material={materials.tv_mat}>
                
            </mesh>
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_9.geometry} material={materials.cables_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_10.geometry} material={materials.props_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_11.geometry} material={materials.ground_mat} />
            <mesh castShadow receiveShadow geometry={nodes.table_table_mat_0_12.geometry} material={materials.key_mat} />
        </group>
    );


//   const { nodes, materials } = useGLTF('/models/retro_computer_setup_free.glb')
//   return (
//     <group {...props} dispose={null}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.retro_computer_setup_retro_computer_setup_Mat_0.geometry}
//         material={materials.retro_computer_setup_Mat}
//         rotation={[-Math.PI / 2, 0, 0]}
//       />
//     </group>
//   )
}

useGLTF.preload('/models/hacker-room.glb')
